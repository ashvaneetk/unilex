Design Goals
------------
Determine size and shape of content for each concept => visualise the concept to assist users to instantly grasp it.
Explore content for concept assynchronously - wonderwheel style.
Tagging UI widget. 
Filter UI widget creating a concept collection / 0% CQL queries.
Inspection UI to discover vocabulary and tagging inconsistencies. Uncover same concepts repeated in different vocabularies.
Allow users to iteratively, collaboratively amend underlying data.
No freetext search - search engine friendly / AAA accessible failover interfaces will allow external public search engines to reliably index & rank the resources. 

Moving from Drupal
------------------
1. Define the Django model for your pages and tags posts.
2. Unit test that model using Django's built-in testing capabilities.
3. Write some small utilities to load your legacy data into Django. At this point, you'll realize that your Django model isn't perfect. Good. Fix it. Fix the tests. Redo the loads.
4. Configure the default admin interface to your model. At this point, you'll spend time tweaking the admin interface. You'll realize your data model is wrong. Which is a good thing. Fix your model. Fix your tests. Fix your loads.
5. Now that your data is correct, you can create templates from your legacy pages.
6. Create URL mappings and view functions to populate the templates from the data model.

Take the time to get the data model right. It really matters, because everything else is very simple if your data model is solid.